{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Inputcsv_Dataflow",
						"type": "DatasetReference"
					},
					"name": "Fact"
				},
				{
					"dataset": {
						"referenceName": "Inputcsv_Dataflow",
						"type": "DatasetReference"
					},
					"name": "Dimpatient"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Outputcsv",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Merge"
				},
				{
					"name": "window1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          FactTablePK as integer,",
				"          dimPatientPK as integer,",
				"          dimPhysicianPK as integer,",
				"          dimDatePostPK as date,",
				"          dimDateServicePK as date,",
				"          dimCPTCodePK as integer,",
				"          dimPayerPK as integer,",
				"          dimTransactionPK as integer,",
				"          dimLocationPK as integer,",
				"          PatientNumber as integer,",
				"          dimDiagnosisCodePK as integer,",
				"          CPTUnits as double,",
				"          GrossCharge as double,",
				"          Payment as double,",
				"          Adjustment as double,",
				"          AR as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Fact",
				"source(output(",
				"          dimPatientPK as integer,",
				"          PatientNumber as integer,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Email as string,",
				"          PatientGender as string,",
				"          PatientAge as short,",
				"          City as string,",
				"          State as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Dimpatient",
				"Fact, Dimpatient join(Fact@dimPatientPK == Dimpatient@dimPatientPK,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> Merge",
				"Merge window(over(PatientGender),",
				"     asc(PatientGender, true),",
				"     Patientcount = count(Fact@PatientNumber)) ~> window1",
				"window1 alterRow(deleteIf(equals(PatientGender,'Male'))) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Alter.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}